{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
			"kind": "dev",
			"methods": {},
			"stateVariables": {
				"initialized": {
					"details": "Indicates that the contract has been initialized."
				},
				"initializing": {
					"details": "Indicates that the contract is in the process of being initialized."
				}
			},
			"title": "Initializable",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@openzeppelin/upgrades/contracts/Initializable.sol": "Initializable"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@openzeppelin/upgrades/contracts/Initializable.sol": {
			"keccak256": "0x9c81c571e2957eb7d19da042b9aed1195457fb970304a770d62079afa1866836",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef3b6ab6bf20d3543d39b7745044c8811c697f627546bcd7c168f73e53fe4e3c",
				"dweb:/ipfs/Qmb3qediABgB5pA9dX4n9S7sNFg1uAaEP7RJWfDaPZCqv4"
			]
		}
	},
	"version": 1
}